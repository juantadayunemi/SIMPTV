# Generated by Django 5.2 on 2025-10-11 19:29

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "createdAt",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_column="createdAt",
                        verbose_name="Created At",
                    ),
                ),
                (
                    "updatedAt",
                    models.DateTimeField(
                        auto_now=True, db_column="updatedAt", verbose_name="Updated At"
                    ),
                ),
                (
                    "isActive",
                    models.BooleanField(
                        db_column="isActive", default=True, verbose_name="Is Active"
                    ),
                ),
                ("description", models.CharField(max_length=500)),
                ("latitude", models.DecimalField(decimal_places=8, max_digits=11)),
                ("longitude", models.DecimalField(decimal_places=8, max_digits=12)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("province", models.CharField(blank=True, max_length=100, null=True)),
                ("country", models.CharField(max_length=100)),
                ("notes", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Location",
                "verbose_name_plural": "Locations",
                "db_table": "traffic_locations",
                "ordering": ["-createdAt"],
            },
        ),
        migrations.CreateModel(
            name="Camera",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "createdAt",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_column="createdAt",
                        verbose_name="Created At",
                    ),
                ),
                (
                    "updatedAt",
                    models.DateTimeField(
                        auto_now=True, db_column="updatedAt", verbose_name="Updated At"
                    ),
                ),
                (
                    "isActive",
                    models.BooleanField(
                        db_column="isActive", default=True, verbose_name="Is Active"
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("brand", models.CharField(blank=True, max_length=50, null=True)),
                ("model", models.CharField(blank=True, max_length=50, null=True)),
                ("resolution", models.CharField(blank=True, max_length=20, null=True)),
                ("fps", models.IntegerField(blank=True, null=True)),
                ("status", models.CharField(default="ACTIVE", max_length=20)),
                ("lanes", models.IntegerField(default=2)),
                ("coversBothDirections", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "locationId",
                    models.ForeignKey(
                        db_column="locationId",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cameras",
                        to="traffic_app.location",
                        verbose_name="Location",
                    ),
                ),
            ],
            options={
                "verbose_name": "Camera",
                "verbose_name_plural": "Cameras",
                "db_table": "traffic_cameras",
                "ordering": ["-createdAt"],
            },
        ),
        migrations.CreateModel(
            name="TrafficAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "createdAt",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_column="createdAt",
                        verbose_name="Created At",
                    ),
                ),
                (
                    "updatedAt",
                    models.DateTimeField(
                        auto_now=True, db_column="updatedAt", verbose_name="Updated At"
                    ),
                ),
                (
                    "isActive",
                    models.BooleanField(
                        db_column="isActive", default=True, verbose_name="Is Active"
                    ),
                ),
                ("videoPath", models.CharField(blank=True, max_length=500, null=True)),
                ("userId", models.IntegerField(blank=True, null=True)),
                ("startedAt", models.DateTimeField()),
                ("endedAt", models.DateTimeField(blank=True, null=True)),
                ("duration", models.IntegerField(blank=True, null=True)),
                ("totalFrames", models.IntegerField(default=0)),
                ("processedFrames", models.IntegerField(default=0)),
                ("totalVehicles", models.IntegerField(default=0)),
                ("processingDuration", models.IntegerField(default=0)),
                ("totalVehicleCount", models.IntegerField(default=0)),
                (
                    "avgSpeed",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                ("densityLevel", models.CharField(max_length=10)),
                (
                    "weatherConditions",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("analysisData", models.TextField(blank=True, null=True)),
                ("status", models.CharField(max_length=20)),
                ("errorMessage", models.TextField(blank=True, null=True)),
                ("carCount", models.IntegerField(default=0)),
                ("truckCount", models.IntegerField(default=0)),
                ("motorcycleCount", models.IntegerField(default=0)),
                ("busCount", models.IntegerField(default=0)),
                ("bicycleCount", models.IntegerField(default=0)),
                ("otherCount", models.IntegerField(default=0)),
                (
                    "cameraId",
                    models.ForeignKey(
                        db_column="cameraId",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analyses",
                        to="traffic_app.camera",
                        verbose_name="Camera",
                    ),
                ),
                (
                    "locationId",
                    models.ForeignKey(
                        db_column="locationId",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analyses",
                        to="traffic_app.location",
                        verbose_name="Location",
                    ),
                ),
            ],
            options={
                "verbose_name": "Traffic Analysis",
                "verbose_name_plural": "Traffic Analyses",
                "db_table": "traffic_analyses",
                "ordering": ["-startedAt"],
            },
        ),
        migrations.CreateModel(
            name="Vehicle",
            fields=[
                (
                    "createdAt",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_column="createdAt",
                        verbose_name="Created At",
                    ),
                ),
                (
                    "updatedAt",
                    models.DateTimeField(
                        auto_now=True, db_column="updatedAt", verbose_name="Updated At"
                    ),
                ),
                (
                    "isActive",
                    models.BooleanField(
                        db_column="isActive", default=True, verbose_name="Is Active"
                    ),
                ),
                (
                    "id",
                    models.CharField(
                        editable=False, max_length=50, primary_key=True, serialize=False
                    ),
                ),
                ("vehicleType", models.CharField(max_length=20)),
                ("confidence", models.DecimalField(decimal_places=4, max_digits=5)),
                ("firstDetectedAt", models.DateTimeField()),
                ("lastDetectedAt", models.DateTimeField()),
                ("trackingStatus", models.CharField(max_length=20)),
                (
                    "avgSpeed",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                ("direction", models.CharField(blank=True, max_length=20, null=True)),
                ("lane", models.IntegerField(blank=True, null=True)),
                ("totalFrames", models.IntegerField(default=0)),
                ("storedFrames", models.IntegerField(default=0)),
                ("color", models.CharField(blank=True, max_length=50, null=True)),
                ("brand", models.CharField(blank=True, max_length=50, null=True)),
                ("model", models.CharField(blank=True, max_length=50, null=True)),
                ("plateProcessingStatus", models.CharField(max_length=20)),
                ("bestFrameForPlate", models.IntegerField(blank=True, null=True)),
                (
                    "trafficAnalysisId",
                    models.ForeignKey(
                        db_column="trafficAnalysisId",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vehicles",
                        to="traffic_app.trafficanalysis",
                        verbose_name="Traffic Analysis",
                    ),
                ),
            ],
            options={
                "verbose_name": "Vehicle",
                "verbose_name_plural": "Vehicles",
                "db_table": "traffic_vehicles",
                "ordering": ["-firstDetectedAt"],
            },
        ),
        migrations.CreateModel(
            name="VehicleFrame",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "createdAt",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_column="createdAt",
                        verbose_name="Created At",
                    ),
                ),
                (
                    "updatedAt",
                    models.DateTimeField(
                        auto_now=True, db_column="updatedAt", verbose_name="Updated At"
                    ),
                ),
                (
                    "isActive",
                    models.BooleanField(
                        db_column="isActive", default=True, verbose_name="Is Active"
                    ),
                ),
                ("frameNumber", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("boundingBoxX", models.IntegerField()),
                ("boundingBoxY", models.IntegerField()),
                ("boundingBoxWidth", models.IntegerField()),
                ("boundingBoxHeight", models.IntegerField()),
                ("confidence", models.DecimalField(decimal_places=4, max_digits=5)),
                ("frameQuality", models.DecimalField(decimal_places=4, max_digits=5)),
                (
                    "speed",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                ("imagePath", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "vehicleId",
                    models.ForeignKey(
                        db_column="vehicleId",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="frames",
                        to="traffic_app.vehicle",
                        verbose_name="Vehicle",
                    ),
                ),
            ],
            options={
                "verbose_name": "Vehicle Frame",
                "verbose_name_plural": "Vehicle Frames",
                "db_table": "traffic_vehicle_frames",
                "ordering": ["frameNumber"],
            },
        ),
        migrations.AddIndex(
            model_name="camera",
            index=models.Index(
                fields=["locationId", "isActive"], name="traffic_cam_locatio_422f72_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="camera",
            index=models.Index(fields=["brand"], name="traffic_cam_brand_9b15ac_idx"),
        ),
        migrations.AddIndex(
            model_name="trafficanalysis",
            index=models.Index(
                fields=["cameraId", "startedAt"], name="traffic_ana_cameraI_99ca1d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trafficanalysis",
            index=models.Index(fields=["status"], name="traffic_ana_status_191dc6_idx"),
        ),
        migrations.AddIndex(
            model_name="trafficanalysis",
            index=models.Index(
                fields=["startedAt", "endedAt"], name="traffic_ana_started_0a3f76_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="vehicle",
            index=models.Index(
                fields=["trafficAnalysisId", "vehicleType"],
                name="traffic_veh_traffic_8a1f64_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="vehicle",
            index=models.Index(
                fields=["trackingStatus"], name="traffic_veh_trackin_5b332c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="vehicleframe",
            index=models.Index(
                fields=["vehicleId", "frameNumber"],
                name="traffic_veh_vehicle_32e708_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="vehicleframe",
            index=models.Index(
                fields=["frameQuality"], name="traffic_veh_frameQu_60dde2_idx"
            ),
        ),
    ]
