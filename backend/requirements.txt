# ============================================================================
# TRAFISMART - Backend Requirements
# Python 3.13 Compatible
# ============================================================================
# NOTA: Para instalación de producción, usar requirements_production.txt
# Este archivo usa versiones flexibles para desarrollo
# ============================================================================

# Core Django and Database
Django==5.2
mssql-django==1.6
pyodbc==5.2.0

# Django REST Framework
djangorestframework==3.15.2
djangorestframework-simplejwt==5.3.0

# Configuration and Security
python-decouple==3.8
django-cors-headers==4.4.0
setuptools>=65.0  # For pkg_resources compatibility

# Development Tools
django-debug-toolbar==4.3.0
django-extensions==3.2.3
werkzeug==3.0.1  # Enhanced auto-reload and debugger for runserver_plus
# watchdog==4.0.0  # Commented: Not compatible with Python 3.13 yet (use runserver instead)

# API Documentation
drf-spectacular==0.27.1

# Email
django-mail-templated==2.6.5
dnspython==2.6.1  # For email domain validation (MX records)

# Video Processing & AI
opencv-python==4.10.0.84  # Computer vision
opencv-contrib-python==4.10.0.84  # Extra OpenCV modules
numpy==1.26.4  # Compatible con PaddleOCR y ONNX Runtime

# OCR para detección de placas vehiculares - SOLO PADDLEOCR
paddleocr==2.8.1  # PaddleOCR - Motor OCR ÚNICO (más rápido que EasyOCR)
paddlepaddle==3.0.0  # PaddlePaddle framework (CPU optimizado)
shapely==2.0.6  # Geometría de polígonos (requerido por PaddleOCR)

# PyTorch ELIMINADO - Ya no se usa con ONNX Runtime (más rápido y eficiente)
# ANTES: torch==2.7.1+cu118, torchvision==0.22.1+cu118, torchaudio==2.7.1+cu118
# AHORA: ONNX Runtime GPU (2-3x más rápido, menos memoria)

pillow==10.4.0  # Image processing

# YOLOv5 for object detection (2x más rápido que YOLOv8)
# Modelo: yolov5m.onnx (~81MB, 10-18ms con GPU, 35-50 FPS)
# ONNX Runtime: Motor optimizado para inferencia YOLOv5 (2-3x más rápido que PyTorch)
onnxruntime-directml==1.23.0  # ONNX Runtime with DirectML (GPU en Windows sin cuDNN)

# Video Tracking
filterpy==1.4.5  # Kalman filter for tracking (SORT tracker)
scipy==1.14.1  # Scientific computing
scikit-learn==1.5.2  # Machine learning utilities

# Async Processing
celery==5.4.0  # Background task processing
redis==5.2.0  # Message broker for Celery
django-celery-results==2.5.1  # Store Celery results in DB

# WebSocket for Real-time Updates
channels==4.2.0  # WebSocket support for Django
channels-redis==4.2.1  # Redis channel layer
daphne==4.1.2  # ASGI server

# Video Streaming
imageio==2.36.0  # Read/write images and videos
imageio-ffmpeg==0.5.1  # FFmpeg wrapper for video processing

# Testing
pytest==8.1.1
pytest-django==4.8.0

# Code Quality
black==24.3.0
flake8==7.0.0
ruff==0.3.4